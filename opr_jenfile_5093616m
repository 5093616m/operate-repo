          
pipeline {
      agent any
      stages {
          stage('Opr-S1-5093616m') {
	    steps {
            sh 'docker rmi bkup_uat_image'
	    sh 'docker commit uat_5093616m bkup_uat_image'
	    sh '''#!/bin/bash
            puppet resource file /tmp/5093616m ensure=absent force=true;
            puppet resource file /tmp/5093616m ensure=directory;
	    puppet resource file /tmp/5093616m/work ensure=absent force=true;
            puppet resource file /tmp/5093616m/work ensure=directory;
	    cd /tmp/5093616m/work;
	    git clone https://github.com/5093616m/operate-repo-5093616m.git;
            targets=uat_5093616m;
            locate_script='/tmp/5093616m/work/operate-repo-5093616m/script_5093616m';
            bolt script run $locate_script -t $targets -u clientadm -p abc123 --no-host-key-check --run-as root;
            '''
	    echo 'Opr-S1-5093616m: uat web server is backup and updated'
            }
          }

          stage('Opr-S2-5093616m') {
            steps {
	      sh 'curl -Is http://uat_5093616m.localdomain | head –n 1 > /tmp/uat-result-file'
	      sh 'cat /tmp/uat-result-file'
	      script {
		if ('cat /tmp/uat-result-file' == 'HTTP/1.1  200 OK') {
                   echo 'Opr-S2-5093616m: uat svr is running after update'
                } 
		else {
  	            echo 'Opr-S2-5093616m: uat svr fails after update and is rolled back'
                }
	      }
            }
          }

          stage('Opr-S3-5093616m') {
            steps {
              script {
              v1 = input ( 
                       message:'Do you want to generate load test report for uat web server?',
                       parameters: [choice(name:'',choices: [' Proceed to generate load test report (uat server is running)', 'Abort (uat server is rolled back)'])]
                       )
                       }
              echo 'Opr-S3-5093616m: Proceed to generate load test report for uat web server'
            }
          }

          stage('Opr-S4-5093616m') {
            steps {
            echo 'Opr-S4-5093616m: load test for uat web server is successful'
            }
          }

          stage('Opr-S5-5093616m') {
            steps {
             sh 'docker rmi bkup_prod_image'
	     sh 'docker commit prod_5093616m bkup_prod_image'
	     sh '''#!/bin/bash
             targets=prod_5093616m;
             locate_script='/tmp/5093616m/work/operate-repo-5093616m/script_5093616m';
             bolt script run $locate_script -t $targets -u clientadm -p abc123 --no-host-key-check --run-as root;
             '''
             echo 'Opr-S5-5093616m: prod web server is backup and updated'
            }
          }

          stage('Opr-S6-5093616m') {
            steps {
              sh 'curl -Is http://prod_5093616m.localdomain | head –n 1  > /tmp/prod-result-file'
	      sh 'cat /tmp/prod-result-file'
	      script {
		if ('cat /tmp/prod-result-file' == 'HTTP/1.1  200 OK') {
                   echo 'Opr-S6-5093616m: prod svr is running after update'
                   } else {
  	            echo 'Opr-S6-5093616m: prod svr fails after update and is rolled back'
                   }
	      }
            }
          }
	
          stage('Opr-S7-5093616m') {
            steps {
 	      script {
	         v3 = input ( 
                       message: 'Action',
                       parameters: [choice(name:'',choices: [' Proceed to further system health check', 'Release prod web server to production'])]
                            )
                 if (v3 == 'Proceed to further system health check') {
                   echo 'Opr-S7-5093616m: Proceed to further system health check'
                   } else if (v3 == 'Release prod web server to production') {
  	            echo "Opr-S7-5093616m: prod web server is updated and ready"
                   }	      
              }
            }
          }
  }
}
